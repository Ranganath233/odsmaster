package com.wipro.wess.ods.site;

// Generated Jan 7, 2014 12:15:31 PM by Hibernate Tools 3.2.2.GA

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import javax.jdo.InstanceCallbacks;
import javax.jdo.annotations.Column;
import javax.jdo.annotations.Columns;
import javax.jdo.annotations.IdGeneratorStrategy;
import javax.jdo.annotations.IdentityType;
import javax.jdo.annotations.Persistent;

import org.apache.isis.applib.DomainObjectContainer;
import org.apache.isis.applib.annotation.Audited;
import org.apache.isis.applib.annotation.Bookmarkable;
import org.apache.isis.applib.annotation.Bulk;
import org.apache.isis.applib.annotation.CssClass;
import org.apache.isis.applib.annotation.Hidden;
import org.apache.isis.applib.annotation.Mandatory;
import org.apache.isis.applib.annotation.ObjectType;
import org.apache.isis.applib.annotation.Optional;
import org.apache.isis.applib.annotation.Title;
import org.apache.isis.applib.annotation.Where;

import com.wipro.wess.ods.munit.MUnit;
import com.wipro.wess.ods.munit.MUnitFamily;

/**
 * OmSiteInfoElement generated by hbm2java
 */
@javax.jdo.annotations.PersistenceCapable(schema = "gemsods", table = "om_site_info_element", objectIdClass = OmSiteInfoElementPK.class, identityType = IdentityType.APPLICATION)
// @javax.jdo.annotations.Version(strategy = VersionStrategy.VERSION_NUMBER,
// column = "version")
@javax.jdo.annotations.Queries({ @javax.jdo.annotations.Query(name = "fetch_siteinfoelements_by_user", language = "JPQL", value = "SELECT siteinfo FROM com.wipro.wess.ods.site.OmSiteInfoElement siteinfo "
        + " JOIN siteinfo.site site WHERE EXISTS "
        + " (SELECT 1 FROM com.wipro.wess.pdm.security.OmPermission permission WHERE permission.site = site AND permission IN "
        + " (SELECT "
        + " OmRolesPermissions.permission FROM com.wipro.wess.pdm.security.OmRolesPermissions OmRolesPermissions "
        + " WHERE role IN ( SELECT OmUsersRoles.role FROM com.wipro.wess.pdm.security.OmUsersRoles OmUsersRoles WHERE OmUsersRoles.user.userName = :userName) ) ) "), })
@Audited
@ObjectType("OmSiteInfoElement")
@Bookmarkable
public class OmSiteInfoElement implements java.io.Serializable, InstanceCallbacks {

    /**
     * 
     */
    private static final long serialVersionUID = -7261725965176778194L;

    private OmSite site;

    private String measurementEntityId;

    private String measureId;

    private Date startDate;

    private String valueType;

    private MUnitFamily MUnitFamily;

    private MUnit MUnit;

    private int rowseqId;

    private Date endDate;

    private BigDecimal value;

    private Long sourceId;

    private String changeby;

    private Date changedt;

    private Long loadbatch;

    private Date loaddate;
    
    private String configUser;

    public OmSiteInfoElement() {
    }

    public OmSiteInfoElement(int rowseqId, Date changedt) {
        this.rowseqId = rowseqId;
        this.changedt = changedt;
    }

    public OmSiteInfoElement(MUnitFamily MUnitFamily, MUnit MUnit, int rowseqId, Date endDate, BigDecimal value,
            Long sourceId, String changeby, Date changedt, Long loadbatch, Date loaddate) {
        this.MUnitFamily = MUnitFamily;
        this.MUnit = MUnit;
        this.rowseqId = rowseqId;
        this.endDate = endDate;
        this.value = value;
        this.sourceId = sourceId;
        this.changeby = changeby;
        this.changedt = changedt;
        this.loadbatch = loadbatch;
        this.loaddate = loaddate;
    }

    @Column(name = "unit_family_id")
    @Optional
    @Hidden(where = Where.ALL_TABLES)
    public MUnitFamily getMUnitFamily() {
        return this.MUnitFamily;
    }

    public void setMUnitFamily(MUnitFamily MUnitFamily) {
        this.MUnitFamily = MUnitFamily;
    }

    @Column(name = "unit_id")
    @Optional
    @Hidden(where = Where.ALL_TABLES)
    public MUnit getMUnit() {
        return this.MUnit;
    }

    public void setMUnit(MUnit MUnit) {
        this.MUnit = MUnit;
    }

    @Column(allowsNull = "false", name = "rowseq_id")
    @Persistent(valueStrategy = IdGeneratorStrategy.INCREMENT)
    @Hidden(where = Where.ANYWHERE)
    public int getRowseqId() {
        return this.rowseqId;
    }

    public void setRowseqId(int rowseqId) {
        this.rowseqId = rowseqId;
    }

    @Columns(value = { @Column(allowsNull = "false", name = "org_id"),
            @Column(allowsNull = "false", name = "location_uid", target = "site_id") })
    @Persistent(primaryKey = "true")
    @Title
    @Mandatory
    public OmSite getSite() {
        return site;
    }

    public void setSite(OmSite site) {
        this.site = site;
    }

    @Column(allowsNull = "false", name = "measurement_entity_id")
    @Persistent(primaryKey = "true")
    @Title
    public String getMeasurementEntityId() {
        return measurementEntityId;
    }

    public void setMeasurementEntityId(String measurementEntityId) {
        this.measurementEntityId = measurementEntityId;
    }

    @Column(allowsNull = "false", name = "measure_id")
    @Persistent(primaryKey = "true")
    @Title
    public String getMeasureId() {
        return measureId;
    }

    public void setMeasureId(String measureId) {
        this.measureId = measureId;
    }

    @Column(allowsNull = "false", name = "start_date")
    @Persistent(primaryKey = "true")
    @Title
    public Date getStartDate() {
        return startDate;
    }

    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    @Column(allowsNull = "false", name = "value_type")
    @Persistent(primaryKey = "true")
    @Title
    public String getValueType() {
        return valueType;
    }

    public void setValueType(String valueType) {
        this.valueType = valueType;
    }

    @Column(name = "end_date")
    @Optional
    @Hidden(where = Where.ALL_TABLES)
    public Date getEndDate() {
        return this.endDate;
    }

    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    @Column(name = "value")
    @Optional
    @Hidden(where = Where.ALL_TABLES)
    public BigDecimal getValue() {
        return this.value;
    }

    public void setValue(BigDecimal value) {
        this.value = value;
    }

    @Column(name = "source_id")
    @Optional
    @Hidden(where = Where.ALL_TABLES)
    public Long getSourceId() {
        return this.sourceId;
    }

    public void setSourceId(Long sourceId) {
        this.sourceId = sourceId;
    }

    @Column(allowsNull = "false", name = "changeby")
    @Hidden(where = Where.OBJECT_FORMS)
    public String getChangeby() {
        return this.changeby;
    }

    public void setChangeby(String changeby) {
        this.changeby = changeby;
    }

    @Column(allowsNull = "false", name = "changedt")
    @Hidden(where = Where.OBJECT_FORMS)
    public Date getChangedt() {
        return this.changedt;
    }

    public void setChangedt(Date changedt) {
        this.changedt = changedt;
    }

    @Column(name = "loadbatch")
    @Hidden(where = Where.ANYWHERE)
    public Long getLoadbatch() {
        return this.loadbatch;
    }

    public void setLoadbatch(Long loadbatch) {
        this.loadbatch = loadbatch;
    }

    @Column(name = "loaddate")
    @Hidden(where = Where.ANYWHERE)
    public Date getLoaddate() {
        return this.loaddate;
    }

    public void setLoaddate(Date loaddate) {
        this.loaddate = loaddate;
    }


    @Column(name = "config_user")
    @Hidden(where = Where.EVERYWHERE)
    public String getConfigUser() {
        return configUser;
    }

    public void setConfigUser(String configUser) {
        this.configUser = configUser;
    }
    private DomainObjectContainer container;

    public void injectDomainObjectContainer(DomainObjectContainer container) {
        this.container = container;
    }

    public List<MUnit> choicesMUnit() {
        return this.container.allInstances(MUnit.class);
    }

    public List<MUnitFamily> choicesMUnitFamily() {
        return this.container.allInstances(MUnitFamily.class);
    }
    
    public void jdoPostLoad() {
    }

    public void jdoPreClear() {
    }

    public void jdoPreStore() {
        this.setChangeby(this.container.getUser().getName());
        this.setChangedt(new Date());
        this.setConfigUser(this.container.getUser().getName());
    }

    public void jdoPreDelete() {
    }
    
    private OmSiteService siteService;
    
    public void injectOmSiteService(OmSiteService siteService){
        this.siteService = siteService;
    }
    

    @Bulk
    @CssClass("x-caution")
    public List<OmSiteInfoElement> delete() {
        this.container.removeIfNotAlready(this);
        this.container.informUser("Deleted " + container.titleOf(this));
        return this.siteService.listAllSiteInfoElement();
    }

}
