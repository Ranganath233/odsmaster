package com.wipro.wess.ods.uom;

import java.nio.charset.Charset;
import java.util.StringTokenizer;

import com.google.common.io.BaseEncoding;
import com.wipro.wess.ods.munit.MUnitFamilyPK;
import com.wipro.wess.ods.munit.MUnitPK;
import com.wipro.wess.ods.upload.ProvisioningConstants;

// Generated Jan 7, 2014 12:15:31 PM by Hibernate Tools 3.2.2.GA

/**
 * MUnitConversionId generated by hbm2java
 */
public class MUnitConversionPK implements java.io.Serializable {

    /**
     * 
     */
    private static final long serialVersionUID = -5365849735462479102L;

    public MUnitFamilyPK unitFamilyId;

    public MUnitPK fromUnitId;

    public MUnitPK toUnitId;

    public MUnitConversionPK() {
    }

    public MUnitConversionPK(MUnitFamilyPK unitFamilyId, MUnitPK fromUnitId, MUnitPK toUnitId) {
        this.unitFamilyId = unitFamilyId;
        this.fromUnitId = fromUnitId;
        this.toUnitId = toUnitId;
    }

    public MUnitConversionPK(String key) {
        StringTokenizer token = new StringTokenizer(decode(key), ProvisioningConstants.DOMAIN_OBJ_SEPERATOR);
        this.unitFamilyId = new MUnitFamilyPK(token.nextToken());
        this.fromUnitId = new MUnitPK(token.nextToken());
        this.toUnitId = new MUnitPK(token.nextToken());
    }

    @Override
    public String toString() {
        return encode("" + this.unitFamilyId.toString() + ProvisioningConstants.DOMAIN_OBJ_SEPERATOR
                + this.fromUnitId.toString() + ProvisioningConstants.DOMAIN_OBJ_SEPERATOR
                + this.toUnitId.toString() + ProvisioningConstants.DOMAIN_OBJ_SEPERATOR);
    }

    public MUnitFamilyPK getUnitFamilyId() {
        return unitFamilyId;
    }

    public void setUnitFamilyId(MUnitFamilyPK unitFamilyId) {
        this.unitFamilyId = unitFamilyId;
    }

    public MUnitPK getFromUnitId() {
        return fromUnitId;
    }

    public void setFromUnitId(MUnitPK fromUnitId) {
        this.fromUnitId = fromUnitId;
    }

    public MUnitPK getToUnitId() {
        return toUnitId;
    }

    public void setToUnitId(MUnitPK toUnitId) {
        this.toUnitId = toUnitId;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((fromUnitId == null) ? 0 : fromUnitId.hashCode());
        result = prime * result + ((toUnitId == null) ? 0 : toUnitId.hashCode());
        result = prime * result + ((unitFamilyId == null) ? 0 : unitFamilyId.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        MUnitConversionPK other = (MUnitConversionPK) obj;
        if (fromUnitId == null) {
            if (other.fromUnitId != null)
                return false;
        } else if (!fromUnitId.equals(other.fromUnitId))
            return false;
        if (toUnitId == null) {
            if (other.toUnitId != null)
                return false;
        } else if (!toUnitId.equals(other.toUnitId))
            return false;
        if (unitFamilyId == null) {
            if (other.unitFamilyId != null)
                return false;
        } else if (!unitFamilyId.equals(other.unitFamilyId))
            return false;
        return true;
    }

    private static String encode(String str) {

        return BaseEncoding.base32().encode(str.getBytes(Charset.forName("UTF-8")));
    }

    private static String decode(String str) {
        return new String(BaseEncoding.base32().decode(str), Charset.forName("UTF-8"));
    }

}
