package com.wipro.wess.ods.masterconfig;

import java.nio.charset.Charset;
import java.util.StringTokenizer;

import com.google.common.io.BaseEncoding;

// Generated Jan 7, 2014 12:15:31 PM by Hibernate Tools 3.2.2.GA

/**
 * MPointlistId generated by hbm2java
 */
public class MPointlistPK implements java.io.Serializable {

    /**
     * 
     */
    private static final long serialVersionUID = -8376867360445411589L;

    public AssetClassPK assetclassCode;

    public String point;

    public MPointlistPK() {
    }

    public MPointlistPK(AssetClassPK assetclassCode, String point) {
        this.assetclassCode = assetclassCode;
        this.point = point;
    }

    public MPointlistPK(String key) {
        StringTokenizer token = new StringTokenizer(decode(key), "~");
        this.assetclassCode = new AssetClassPK(token.nextToken());
        this.point = token.nextToken();
    }

    @Override
    public String toString() {
        return encode("" + assetclassCode.toString() + "~" + point);
    }

    public AssetClassPK getAssetclassCode() {
        return this.assetclassCode;
    }

    public void setAssetclassCode(AssetClassPK assetclassCode) {
        this.assetclassCode = assetclassCode;
    }

    public String getPoint() {
        return this.point;
    }

    public void setPoint(String point) {
        this.point = point;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((assetclassCode == null) ? 0 : assetclassCode.hashCode());
        result = prime * result + ((point == null) ? 0 : point.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        MPointlistPK other = (MPointlistPK) obj;
        if (assetclassCode == null) {
            if (other.assetclassCode != null)
                return false;
        } else if (!assetclassCode.equals(other.assetclassCode))
            return false;
        if (point == null) {
            if (other.point != null)
                return false;
        } else if (!point.equals(other.point))
            return false;
        return true;
    }

    private static String encode(String str) {

        return BaseEncoding.base32().encode(str.getBytes(Charset.forName("UTF-8")));
    }

    private static String decode(String str) {
        return new String(BaseEncoding.base32().decode(str), Charset.forName("UTF-8"));
    }

}
