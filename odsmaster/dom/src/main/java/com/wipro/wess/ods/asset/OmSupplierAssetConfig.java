package com.wipro.wess.ods.asset;

// Generated Jan 7, 2014 12:15:31 PM by Hibernate Tools 3.2.2.GA

import java.util.ArrayList;
import java.util.List;

import javax.jdo.InstanceCallbacks;
import javax.jdo.annotations.Column;
import javax.jdo.annotations.Columns;
import javax.jdo.annotations.IdentityType;
import javax.jdo.annotations.Persistent;

import org.apache.isis.applib.DomainObjectContainer;
import org.apache.isis.applib.annotation.Audited;
import org.apache.isis.applib.annotation.Bookmarkable;
import org.apache.isis.applib.annotation.Bulk;
import org.apache.isis.applib.annotation.CssClass;
import org.apache.isis.applib.annotation.Hidden;
import org.apache.isis.applib.annotation.Mandatory;
import org.apache.isis.applib.annotation.Named;
import org.apache.isis.applib.annotation.ObjectType;
import org.apache.isis.applib.annotation.Optional;
import org.apache.isis.applib.annotation.Title;
import org.apache.isis.applib.annotation.Where;

import com.wipro.wess.ods.site.OmSite;
import com.wipro.wess.ods.site.OmSiteService;

/**
 * OmSupplierAssetConfig generated by hbm2java
 */
@Named("SupplierAssetConfig")
@Bookmarkable
@Audited
@ObjectType("OmSupplierAssetConfig")
@javax.jdo.annotations.PersistenceCapable(schema = "gemsods", table = "om_supplier_asset_config", objectIdClass = SupplierAssetConfigPK.class, identityType = IdentityType.APPLICATION)
@javax.jdo.annotations.Queries({
        @javax.jdo.annotations.Query(name = "fetch_OmSupplierAssetConfig_by_pk", language = "JDOQL", value = "SELECT "
                + " OmSupplierAssetConfig FROM com.wipro.wess.ods.asset.OmSupplierAssetConfig OmSupplierAssetConfig WHERE supAssetUid == :supAssetUid"),
        @javax.jdo.annotations.Query(name = "fetch_supplassets_by_user", language = "JPQL", value = "SELECT suppasset FROM com.wipro.wess.ods.asset.OmSupplierAssetConfig suppasset "
                + " JOIN suppasset.omSite site WHERE EXISTS "
                + " (SELECT 1 FROM com.wipro.wess.pdm.security.OmPermission permission WHERE permission.site = site AND permission IN "
                + " (SELECT "
                + " OmRolesPermissions.permission FROM com.wipro.wess.pdm.security.OmRolesPermissions OmRolesPermissions "
                + " WHERE role IN ( SELECT OmUsersRoles.role FROM com.wipro.wess.pdm.security.OmUsersRoles OmUsersRoles WHERE OmUsersRoles.user.userName = :userName) ) )") })
public class OmSupplierAssetConfig implements java.io.Serializable, InstanceCallbacks {

    /**
     * 
     */
    private static final long serialVersionUID = -8698292188315461294L;

    private String supAssetUid;

    // private MOrganisation MOrganisation;

    private String parentSupAssetUid;

    private String supAssetDesc;

    private String supAssetType;

    private String afterHrsFlag;

    private String subtypeLvl2;

    // private Set<OmSupplierAssetServiceMap> omSupplierAssetServiceMaps = new HashSet<OmSupplierAssetServiceMap>(0);

    private OmSite omSite;

    private OmSiteService siteService;

    private String configUser;

    public void injectOmSiteService(OmSiteService siteService) {
        this.siteService = siteService;
    }

    public List<OmSite> choicesOmSite() {
        return this.siteService.listAllSites();
    }

    public OmSupplierAssetConfig() {
    }

    public OmSupplierAssetConfig(String supAssetUid/* , MOrganisation MOrganisation */) {
        this.supAssetUid = supAssetUid;
        // this.MOrganisation = MOrganisation;
    }

    public OmSupplierAssetConfig(String supAssetUid, /* MOrganisation MOrganisation, */String parentSupAssetUid,
            String supAssetDesc, String supAssetType, String afterHrsFlag, String subtypeLvl2/*
                                                                                              * , Set<
                                                                                              * OmSupplierAssetServiceMap
                                                                                              * >
                                                                                              * omSupplierAssetServiceMaps
                                                                                              */) {
        this.supAssetUid = supAssetUid;
        // this.MOrganisation = MOrganisation;
        this.parentSupAssetUid = parentSupAssetUid;
        this.supAssetDesc = supAssetDesc;
        this.supAssetType = supAssetType;
        this.afterHrsFlag = afterHrsFlag;
        this.subtypeLvl2 = subtypeLvl2;
        // this.omSupplierAssetServiceMaps = omSupplierAssetServiceMaps;
    }

    @Column(allowsNull = "false", name = "sup_asset_uid")
    @Title
    @Persistent(primaryKey = "true")
    public String getSupAssetUid() {
        return this.supAssetUid;
    }

    public void setSupAssetUid(String supAssetUid) {
        this.supAssetUid = supAssetUid;
    }

    /*
     * @Column(allowsNull = "false", name = "org_id") public MOrganisation getMOrganisation() { return
     * this.MOrganisation; } public void setMOrganisation(MOrganisation MOrganisation) { this.MOrganisation =
     * MOrganisation; }
     */

    @Column(name = "parent_sup_asset_uid")
    @Optional
    @Hidden(where = Where.ALL_TABLES)
    public String getParentSupAssetUid() {
        return this.parentSupAssetUid;
    }

    public void setParentSupAssetUid(String parentSupAssetUid) {
        this.parentSupAssetUid = parentSupAssetUid;
    }

    @Column(name = "sup_asset_desc")
    @Optional
    public String getSupAssetDesc() {
        return this.supAssetDesc;
    }

    public void setSupAssetDesc(String supAssetDesc) {
        this.supAssetDesc = supAssetDesc;
    }

    @Column(name = "sup_asset_type")
    @Optional
    public String getSupAssetType() {
        return this.supAssetType;
    }

    public void setSupAssetType(String supAssetType) {
        this.supAssetType = supAssetType;
    }

    @Column(name = "after_hrs_flag")
    @Optional
    public String getAfterHrsFlag() {
        return this.afterHrsFlag;
    }

    public void setAfterHrsFlag(String afterHrsFlag) {
        this.afterHrsFlag = afterHrsFlag;
    }

    @Column(name = "subtype_lvl2")
    @Optional
    @Hidden(where = Where.ALL_TABLES)
    public String getSubtypeLvl2() {
        return this.subtypeLvl2;
    }

    public void setSubtypeLvl2(String subtypeLvl2) {
        this.subtypeLvl2 = subtypeLvl2;
    }

    /*
     * public Set<OmSupplierAssetServiceMap> getOmSupplierAssetServiceMaps() { return this.omSupplierAssetServiceMaps; }
     * public void setOmSupplierAssetServiceMaps(Set<OmSupplierAssetServiceMap> omSupplierAssetServiceMaps) {
     * this.omSupplierAssetServiceMaps = omSupplierAssetServiceMaps; }
     */

    @Columns(value = { @Column(name = "org_id", allowsNull = "true"), @Column(name = "site_id", allowsNull = "true") })
    @Mandatory
    public OmSite getOmSite() {
        return omSite;
    }

    public void setOmSite(OmSite omSite) {
        this.omSite = omSite;
    }

    @Column(name = "config_user")
    @Hidden(where = Where.EVERYWHERE)
    public String getConfigUser() {
        return configUser;
    }

    public void setConfigUser(String configUser) {
        this.configUser = configUser;
    }

    private DomainObjectContainer container;

    public void injectDomainObjectContainer(final DomainObjectContainer container) {
        this.container = container;
    }

    public void jdoPostLoad() {
    }

    public void jdoPreClear() {
    }

    public void jdoPreStore() {
        this.setConfigUser(this.container.getUser().getName());
    }

    public void jdoPreDelete() {
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((supAssetUid == null) ? 0 : supAssetUid.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        OmSupplierAssetConfig other = (OmSupplierAssetConfig) obj;
        if (supAssetUid == null) {
            if (other.supAssetUid != null)
                return false;
        } else if (!supAssetUid.equals(other.supAssetUid))
            return false;
        return true;
    }

    public List<String> choicesAfterHrsFlag() {
        List<String> afterHrsFlagList = new ArrayList<String>();
        afterHrsFlagList.add(AfterHrsFlag.Y.name());
        afterHrsFlagList.add(AfterHrsFlag.N.name());
        return afterHrsFlagList;
    }

    public static enum AfterHrsFlag {
        Y,
        N;
    }
    
   private OmSupplierAssetService omSupplierAssetService;
   public void injectOmSupplierAssetService(OmSupplierAssetService omSupplierAssetService){
       this.omSupplierAssetService = omSupplierAssetService;
   }
    @Bulk
    @CssClass("x-caution")
    public List<OmSupplierAssetConfig> delete() {
        this.container.removeIfNotAlready(this);
        this.container.informUser("Deleted " + container.titleOf(this));
        return this.omSupplierAssetService.listAllSupplierAssets();
        
    }

}
