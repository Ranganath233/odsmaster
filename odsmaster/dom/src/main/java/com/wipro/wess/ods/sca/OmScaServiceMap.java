package com.wipro.wess.ods.sca;

// Generated Jan 7, 2014 12:15:31 PM by Hibernate Tools 3.2.2.GA

import java.util.Date;
import java.util.List;

import javax.jdo.InstanceCallbacks;
import javax.jdo.annotations.Column;
import javax.jdo.annotations.IdGeneratorStrategy;
import javax.jdo.annotations.IdentityType;
import javax.jdo.annotations.Persistent;

import org.apache.isis.applib.DomainObjectContainer;
import org.apache.isis.applib.annotation.Audited;
import org.apache.isis.applib.annotation.Bookmarkable;
import org.apache.isis.applib.annotation.Bulk;
import org.apache.isis.applib.annotation.CssClass;
import org.apache.isis.applib.annotation.Hidden;
import org.apache.isis.applib.annotation.Named;
import org.apache.isis.applib.annotation.ObjectType;
import org.apache.isis.applib.annotation.Title;
import org.apache.isis.applib.annotation.Where;

import com.wipro.wess.ods.organisation.MOrganisation;
import com.wipro.wess.ods.service.OmServiceConfig;
import com.wipro.wess.ods.service.OmServiceConfigService;

/**
 * OmScaServiceMap generated by hbm2java
 */
@Named("ScaServiceMap")
@Bookmarkable
@Audited
@ObjectType("OmScaServiceMap")
@javax.jdo.annotations.PersistenceCapable(schema = "gemsods", table = "om_sca_service_map", objectIdClass = OmScaServiceMapPK.class, identityType = IdentityType.APPLICATION)
@javax.jdo.annotations.Queries({
        @javax.jdo.annotations.Query(name = "fetch_OmScaServiceMap_by_sca_service_map", language = "JDOQL", value = "SELECT "
                + " OmScaServiceMap FROM com.wipro.wess.ods.sca.OmScaServiceMap OmScaServiceMap WHERE scaUid == :scaUid && serviceUid == :serviceUid "),
        @javax.jdo.annotations.Query(name = "fetch_OmScaServiceMap_by_pk", language = "JDOQL", value = "SELECT "
                + " OmScaServiceMap FROM com.wipro.wess.ods.sca.OmScaServiceMap OmScaServiceMap WHERE scaServiceMapId == :scaServiceMapId "),
        @javax.jdo.annotations.Query(name = "fetch_scaservicemap_by_user", language = "JPQL", value = "SELECT scaservice FROM com.wipro.wess.ods.sca.OmScaServiceMap scaservice "
                + " JOIN scaservice.scaUid sca "
                + " JOIN sca.omSite site WHERE EXISTS "
                + " (SELECT 1 FROM com.wipro.wess.pdm.security.OmPermission permission WHERE permission.site = site AND permission IN "
                + " (SELECT "
                + " OmRolesPermissions.permission FROM com.wipro.wess.pdm.security.OmRolesPermissions OmRolesPermissions "
                + " WHERE role IN ( SELECT OmUsersRoles.role FROM com.wipro.wess.pdm.security.OmUsersRoles OmUsersRoles WHERE OmUsersRoles.user.userName = :userName) ) )  ") })
public class OmScaServiceMap implements java.io.Serializable, InstanceCallbacks {

    /**
     * 
     */
    private static final long serialVersionUID = 7421773998695190142L;

    private long scaServiceMapId;

    private OmServiceConfig serviceUid;

    private OmScaConfig scaUid;

    private MOrganisation orgId;

    private String changeBy;

    private Date changeDt;

    private String configUser;

    private OmScaConfigService scaConfigService;

    private OmServiceConfigService serviceConfigService;

    public void injectOmScaConfigService(OmScaConfigService scaConfigService) {
        this.scaConfigService = scaConfigService;
    }

    public void injectOmServiceConfigService(OmServiceConfigService serviceConfigService) {
        this.serviceConfigService = serviceConfigService;
    }

    public List<OmScaConfig> choicesScaUid() {
        return this.scaConfigService.listAllScaConfigs();
    }

    public List<OmServiceConfig> choicesServiceUid() {
        return this.serviceConfigService.listAllServiceConfigs();
    }

    public OmScaServiceMap() {
    }

    public OmScaServiceMap(long scaServiceMapId, OmServiceConfig serviceUid, OmScaConfig scaUid, String changeBy,
            Date changeDt) {
        this.scaServiceMapId = scaServiceMapId;
        this.serviceUid = serviceUid;
        this.scaUid = scaUid;
        this.changeBy = changeBy;
        this.changeDt = changeDt;
    }

    @Column(allowsNull = "false", name = "sca_service_map_id")
    @Persistent(primaryKey = "true", valueStrategy = IdGeneratorStrategy.INCREMENT)
    @Hidden(where = Where.ANYWHERE)
    public long getScaServiceMapId() {
        return this.scaServiceMapId;
    }

    public void setScaServiceMapId(long scaServiceMapId) {
        this.scaServiceMapId = scaServiceMapId;
    }

    @Column(allowsNull = "false", name = "service_uid")
    @Title
    public OmServiceConfig getServiceUid() {
        return serviceUid;
    }

    public void setServiceUid(OmServiceConfig serviceUid) {
        this.serviceUid = serviceUid;
    }

    @Column(allowsNull = "false", name = "sca_uid")
    @Title
    public OmScaConfig getScaUid() {
        return scaUid;
    }

    public void setScaUid(OmScaConfig scaUid) {
        this.scaUid = scaUid;
    }

    @Column(allowsNull = "false", name = "org_id")
    @Hidden(where = Where.ANYWHERE)
    public MOrganisation getOrgId() {
        return orgId;
    }

    public void setOrgId(MOrganisation orgId) {
        this.orgId = orgId;
    }

    @Column(allowsNull = "false", name = "change_by")
    @Hidden(where = Where.OBJECT_FORMS)
    public String getChangeBy() {
        return this.changeBy;
    }

    public void setChangeBy(String changeBy) {
        this.changeBy = changeBy;
    }

    @Column(allowsNull = "false", name = "change_dt")
    @Hidden(where = Where.OBJECT_FORMS)
    public Date getChangeDt() {
        return this.changeDt;
    }

    @Column(name = "config_user")
    @Hidden(where = Where.EVERYWHERE)
    public String getConfigUser() {
        return configUser;
    }

    public void setConfigUser(String configUser) {
        this.configUser = configUser;
    }

    private DomainObjectContainer container;

    public void injectDomainObjectContainer(final DomainObjectContainer container) {
        this.container = container;
    }

    public void setChangeDt(Date changeDt) {
        this.changeDt = changeDt;
    }

    public void jdoPostLoad() {
    }

    public void jdoPreClear() {
    }

    public void jdoPreStore() {
        // this.setChangeBy(this.container.getUser().getName());
        // this.setChangeDt(new Date());
        // this.setConfigUser(this.container.getUser().getName());
    }

    public void jdoPreDelete() {
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + (int) (scaServiceMapId ^ (scaServiceMapId >>> 32));
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        OmScaServiceMap other = (OmScaServiceMap) obj;
        if (scaServiceMapId != other.scaServiceMapId)
            return false;
        return true;
    }

    @Bulk
    @CssClass("x-caution")
    public List<OmScaServiceMap> delete() {
        this.container.removeIfNotAlready(this);
        this.container.informUser("Deleted " + container.titleOf(this));
        return this.scaConfigService.listAllScaServiceMap();

    }
}
