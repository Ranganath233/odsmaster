package com.wipro.wess.ods.asset.servicemapping;

// Generated Jan 7, 2014 12:15:31 PM by Hibernate Tools 3.2.2.GA

import java.util.Date;
import java.util.List;

import javax.jdo.InstanceCallbacks;
import javax.jdo.annotations.Column;
import javax.jdo.annotations.Columns;
import javax.jdo.annotations.IdGeneratorStrategy;
import javax.jdo.annotations.IdentityType;
import javax.jdo.annotations.Persistent;

import org.apache.isis.applib.DomainObjectContainer;
import org.apache.isis.applib.annotation.Audited;
import org.apache.isis.applib.annotation.Bookmarkable;
import org.apache.isis.applib.annotation.Bulk;
import org.apache.isis.applib.annotation.CssClass;
import org.apache.isis.applib.annotation.Hidden;
import org.apache.isis.applib.annotation.Mandatory;
import org.apache.isis.applib.annotation.Named;
import org.apache.isis.applib.annotation.ObjectType;
import org.apache.isis.applib.annotation.Title;
import org.apache.isis.applib.annotation.Where;

import com.wipro.wess.ods.asset.OmAsset;
import com.wipro.wess.ods.organisation.MOrganisation;
import com.wipro.wess.ods.service.OmServiceConfig;

/**
 * OmAssetOutputservice generated by hbm2java
 */
@Named("AssetOutputservice")
@Bookmarkable
@Audited
@ObjectType("OmAssetOutputservice")
@javax.jdo.annotations.PersistenceCapable(schema = "gemsods", table = "om_asset_outputservice", objectIdClass = OmAssetOutputservicePK.class, identityType = IdentityType.APPLICATION)
@javax.jdo.annotations.Queries({
        @javax.jdo.annotations.Query(name = "fetch_OmAssetOutputservice_by_pk", language = "JDOQL", value = "SELECT "
                + " OmAssetOutputservice FROM com.wipro.wess.ods.asset.servicemapping.OmAssetOutputservice OmAssetOutputservice WHERE orgId == :orgId && assetUid == :assetUid && "
                + " outputserviceAssetUid == :outputserviceAssetUid"),
        @javax.jdo.annotations.Query(name = "fetch_output_services_by_user", language = "JPQL", value = "SELECT service FROM com.wipro.wess.ods.asset.servicemapping.OmAssetOutputservice service "
                + " JOIN service.assetUid asset "
                + " JOIN asset.omLocationHierarchy loc_hcy "
                + " JOIN loc_hcy.omSite site WHERE EXISTS "
                + " (SELECT 1 FROM com.wipro.wess.pdm.security.OmPermission permission WHERE permission.site = site AND permission IN "
                + " (SELECT "
                + " OmRolesPermissions.permission FROM com.wipro.wess.pdm.security.OmRolesPermissions OmRolesPermissions "
                + " WHERE role IN ( SELECT OmUsersRoles.role FROM com.wipro.wess.pdm.security.OmUsersRoles OmUsersRoles WHERE OmUsersRoles.user.userName = :userName) ) ) ") })
public class OmAssetOutputservice implements java.io.Serializable, InstanceCallbacks {

    /**
     * 
     */
    private static final long serialVersionUID = -1471724595261044062L;

    private MOrganisation orgId;

    private OmAsset assetUid;

    private OmServiceConfig outputserviceAssetUid;

    private int rowseqId;

    private String monitoringAssetUid;

    private String description;

    private Long sourceId;

    private String changeby;

    private Date changedt;

    private Long loadbatch;

    private Date loaddate;

    private String configUser;
    
    public OmAssetOutputservice() {
    }

    public OmAssetOutputservice(int rowseqId, Date changedt) {
        this.rowseqId = rowseqId;
        this.changedt = changedt;
    }

    public OmAssetOutputservice(int rowseqId, String monitoringAssetUid, String description, Long sourceId,
            String changeby, Date changedt, Long loadbatch, Date loaddate) {
        this.rowseqId = rowseqId;
        this.monitoringAssetUid = monitoringAssetUid;
        this.description = description;
        this.sourceId = sourceId;
        this.changeby = changeby;
        this.changedt = changedt;
        this.loadbatch = loadbatch;
        this.loaddate = loaddate;
    }

    @Column(allowsNull = "false", name = "org_id")
    @Title
    @Persistent(primaryKey = "true")
    public MOrganisation getOrgId() {
        return orgId;
    }

    public void setOrgId(MOrganisation orgId) {
        this.orgId = orgId;
    }

    @Columns(value = { @Column(allowsNull = "false", name = "asset_uid"), @Column(name = "asset_org_id") })
    @Title
    @Persistent(primaryKey = "true")
    @Mandatory
    public OmAsset getAssetUid() {
        return assetUid;
    }

    public void setAssetUid(OmAsset assetUid) {
        this.assetUid = assetUid;
    }

    @Column(allowsNull = "false", name = "outputservice_asset_uid")
    @Title
    @Persistent(primaryKey = "true")
    public OmServiceConfig getOutputserviceAssetUid() {
        return outputserviceAssetUid;
    }

    public void setOutputserviceAssetUid(OmServiceConfig outputserviceAssetUid) {
        this.outputserviceAssetUid = outputserviceAssetUid;
    }

    @Column(allowsNull = "false", name = "rowseq_id")
    @Persistent(valueStrategy = IdGeneratorStrategy.INCREMENT)
    @Hidden
    public int getRowseqId() {
        return this.rowseqId;
    }

    public void setRowseqId(int rowseqId) {
        this.rowseqId = rowseqId;
    }

    @Column(name = "monitoring_asset_uid")
    public String getMonitoringAssetUid() {
        return this.monitoringAssetUid;
    }

    public void setMonitoringAssetUid(String monitoringAssetUid) {
        this.monitoringAssetUid = monitoringAssetUid;
    }

    @Column(name = "description")
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "source_id")
    @Hidden(where = Where.ALL_TABLES)
    public Long getSourceId() {
        return this.sourceId;
    }

    public void setSourceId(Long sourceId) {
        this.sourceId = sourceId;
    }

    @Column(allowsNull = "false", name = "changeby")
    @Hidden
    public String getChangeby() {
        return this.changeby;
    }

    public void setChangeby(String changeby) {
        this.changeby = changeby;
    }

    @Column(allowsNull = "false", name = "changedt")
    @Hidden
    public Date getChangedt() {
        return this.changedt;
    }

    public void setChangedt(Date changedt) {
        this.changedt = changedt;
    }

    @Column(name = "loadbatch")
    @Hidden
    public Long getLoadbatch() {
        return this.loadbatch;
    }

    public void setLoadbatch(Long loadbatch) {
        this.loadbatch = loadbatch;
    }

    @Column(name = "loaddate")
    @Hidden
    public Date getLoaddate() {
        return this.loaddate;
    }

    public void setLoaddate(Date loaddate) {
        this.loaddate = loaddate;
    }
    
    @Column(name = "config_user")
    @Hidden(where = Where.EVERYWHERE)
    public String getConfigUser() {
        return configUser;
    }

    public void setConfigUser(String configUser) {
        this.configUser = configUser;
    }

    private DomainObjectContainer container;

    public void injectDomainObjectContainer(final DomainObjectContainer container) {
        this.container = container;
    }

    public void jdoPostLoad() {
    }

    public void jdoPreClear() {
    }

    public void jdoPreStore() {
        this.setChangeby(this.container.getUser().getName());
        this.setChangedt(new Date());
        this.setConfigUser(this.container.getUser().getName());
    }

    public void jdoPreDelete() {
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((assetUid == null) ? 0 : assetUid.hashCode());
        result = prime * result + ((orgId == null) ? 0 : orgId.hashCode());
        result = prime * result + ((outputserviceAssetUid == null) ? 0 : outputserviceAssetUid.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        OmAssetOutputservice other = (OmAssetOutputservice) obj;
        if (assetUid == null) {
            if (other.assetUid != null)
                return false;
        } else if (!assetUid.equals(other.assetUid))
            return false;
        if (orgId == null) {
            if (other.orgId != null)
                return false;
        } else if (!orgId.equals(other.orgId))
            return false;
        if (outputserviceAssetUid == null) {
            if (other.outputserviceAssetUid != null)
                return false;
        } else if (!outputserviceAssetUid.equals(other.outputserviceAssetUid))
            return false;
        return true;
    }
    
    private AssetServiceMappingService assetServiceMappingService;

    public void injectAssetServiceMappingService(AssetServiceMappingService assetServiceMappingService) {
        this.assetServiceMappingService = assetServiceMappingService;
    }

    @Bulk
    @CssClass("x-caution")
    public List<OmAssetOutputservice> delete() {
        this.container.removeIfNotAlready(this);
        this.container.informUser("Deleted " + container.titleOf(this));
        return this.assetServiceMappingService.listAllAssetOutputServices();

    }

}
