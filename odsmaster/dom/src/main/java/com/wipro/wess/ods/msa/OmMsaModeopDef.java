package com.wipro.wess.ods.msa;

import java.util.List;

import javax.jdo.InstanceCallbacks;
import javax.jdo.annotations.Column;
import javax.jdo.annotations.Columns;
import javax.jdo.annotations.IdGeneratorStrategy;
import javax.jdo.annotations.IdentityType;
import javax.jdo.annotations.Persistent;
import javax.jdo.annotations.Sequence;
import javax.jdo.annotations.SequenceStrategy;

import org.apache.isis.applib.DomainObjectContainer;
import org.apache.isis.applib.annotation.Audited;
import org.apache.isis.applib.annotation.Bookmarkable;
import org.apache.isis.applib.annotation.Bulk;
import org.apache.isis.applib.annotation.CssClass;
import org.apache.isis.applib.annotation.Hidden;
import org.apache.isis.applib.annotation.Mandatory;
import org.apache.isis.applib.annotation.Named;
import org.apache.isis.applib.annotation.ObjectType;
import org.apache.isis.applib.annotation.Title;
import org.apache.isis.applib.annotation.Where;

// Generated Jan 7, 2014 12:15:31 PM by Hibernate Tools 3.2.2.GA

/**
 * OmMsaModeopDef generated by hbm2java
 */
@Named("MSAModeopDef")
@Bookmarkable
@Audited
@ObjectType("OmMsaModeopDef")
@javax.jdo.annotations.PersistenceCapable(schema = "gemsods", table = "om_msa_modeop_def", objectIdClass = MsaModeOpDefPK.class, identityType = IdentityType.APPLICATION)
@javax.jdo.annotations.Queries({
        @javax.jdo.annotations.Query(name = "fetch_OmMsaModeopDef_by_msa_modename", language = "JDOQL", value = "SELECT "
                + " OmMsaModeopDef FROM com.wipro.wess.ods.msa.OmMsaModeopDef OmMsaModeopDef "
                + " WHERE omModeOfOperationConfig.modeName == :modeName && omModeOfOperationConfig.organisation == :organisation && omMsaConfig == :msaConfig"),
        @javax.jdo.annotations.Query(name = "fetch_MsaModeopDef_by_user", language = "JPQL", value = "SELECT msamodeop FROM com.wipro.wess.ods.msa.OmMsaModeopDef msamodeop "
                + " JOIN msamodeop.omMsaConfig msa WHERE msa IN ("
                + " SELECT msasitemap.msaUid FROM com.wipro.wess.ods.site.OmMsaSiteMap msasitemap"
                + " JOIN msasitemap.omSite site WHERE EXISTS "
                + " (SELECT 1 FROM com.wipro.wess.pdm.security.OmPermission permission WHERE permission.site = site AND permission IN "
                + " (SELECT "
                + " OmRolesPermissions.permission FROM com.wipro.wess.pdm.security.OmRolesPermissions OmRolesPermissions "
                + " WHERE role IN ( SELECT OmUsersRoles.role FROM com.wipro.wess.pdm.security.OmUsersRoles OmUsersRoles WHERE OmUsersRoles.user.userName = :userName) ) ) ) ") })
@Sequence(name = "msa_mop_def_id", datastoreSequence = "msa_mop_def_id", strategy = SequenceStrategy.CONTIGUOUS)
public class OmMsaModeopDef implements java.io.Serializable, InstanceCallbacks {

    /**
     * 
     */
    private static final long serialVersionUID = 7680958106354421599L;

    private int msaMopDefId;

    private OmMsaConfig omMsaConfig;

    private OmModeOfOperationConfig omModeOfOperationConfig;

    private String modeDefinition;

    private Long sourceId;

    private String configUser;

    public OmMsaModeopDef() {
    }

    public OmMsaModeopDef(int msaMopDefId, OmMsaConfig omMsaConfig, OmModeOfOperationConfig omModeOfOperationConfig,
            String modeDefinition) {
        this.msaMopDefId = msaMopDefId;
        this.omMsaConfig = omMsaConfig;
        this.omModeOfOperationConfig = omModeOfOperationConfig;
        this.modeDefinition = modeDefinition;
    }

    public OmMsaModeopDef(int msaMopDefId, OmMsaConfig omMsaConfig, OmModeOfOperationConfig omModeOfOperationConfig,
            String modeDefinition, Long sourceId) {
        this.msaMopDefId = msaMopDefId;
        this.omMsaConfig = omMsaConfig;
        this.omModeOfOperationConfig = omModeOfOperationConfig;
        this.modeDefinition = modeDefinition;
        this.sourceId = sourceId;
    }

    @Persistent(primaryKey = "true", valueStrategy = IdGeneratorStrategy.INCREMENT)
    @Column(allowsNull = "false", name = "msa_mop_def_id")
    @Hidden(where = Where.OBJECT_FORMS)
    public int getMsaMopDefId() {
        return this.msaMopDefId;
    }

    public void setMsaMopDefId(int msaMopDefId) {
        this.msaMopDefId = msaMopDefId;
    }

    @Column(allowsNull = "false", name = "msa_uid")
    @Title
    public OmMsaConfig getOmMsaConfig() {
        return this.omMsaConfig;
    }

    public void setOmMsaConfig(OmMsaConfig omMsaConfig) {
        this.omMsaConfig = omMsaConfig;
    }

    @Columns({ @Column(allowsNull = "false", name = "mode_name", target = "mode_name"),
            @Column(allowsNull = "false", name = "org_id", target = "org_id"), })
    @Mandatory
    @Title
    public OmModeOfOperationConfig getOmModeOfOperationConfig() {
        return this.omModeOfOperationConfig;
    }

    public void setOmModeOfOperationConfig(OmModeOfOperationConfig omModeOfOperationConfig) {
        this.omModeOfOperationConfig = omModeOfOperationConfig;
    }

    @Column(allowsNull = "false", name = "mode_definition")
    public String getModeDefinition() {
        return this.modeDefinition;
    }

    public void setModeDefinition(String modeDefinition) {
        this.modeDefinition = modeDefinition;
    }

    @Column(name = "source_id")
    @Hidden(where = Where.ALL_TABLES)
    public Long getSourceId() {
        return this.sourceId;
    }

    public void setSourceId(Long sourceId) {
        this.sourceId = sourceId;
    }

    @Column(name = "config_user")
    @Hidden(where = Where.EVERYWHERE)
    public String getConfigUser() {
        return configUser;
    }

    public void setConfigUser(String configUser) {
        this.configUser = configUser;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + msaMopDefId;
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        OmMsaModeopDef other = (OmMsaModeopDef) obj;
        if (msaMopDefId != other.msaMopDefId)
            return false;
        return true;
    }

    private OmModeOfOperationConfigService modeOfOperationConfigService;

    public void injectOmModeOfOperationConfigService(OmModeOfOperationConfigService modeOfOperationConfigService) {
        this.modeOfOperationConfigService = modeOfOperationConfigService;
    }

    public List<OmModeOfOperationConfig> choicesOmModeOfOperationConfig() {
        return this.modeOfOperationConfigService.listAllModeOprConfigs();
    }

    private OmMsaConfigService msaConfigService;

    public void injectOmMsaConfigService(OmMsaConfigService msaConfigService) {
        this.msaConfigService = msaConfigService;
    }

    public List<OmMsaConfig> choicesOmMsaConfig() {
        return this.msaConfigService.listAllMsaConfigs();
    }

    private DomainObjectContainer container;

    public void injectDomainObjectContainer(final DomainObjectContainer container) {
        this.container = container;
    }

    public void jdoPostLoad() {
    }

    public void jdoPreClear() {
    }

    public void jdoPreStore() {
        this.setConfigUser(this.container.getUser().getName());
    }

    public void jdoPreDelete() {
    }

    @Bulk
    @CssClass("x-caution")
    public List<OmMsaModeopDef> delete() {
        this.container.removeIfNotAlready(this);
        this.container.informUser("Deleted " + container.titleOf(this));
        return this.msaConfigService.listAllMsaModeOpDef();

    }
}
