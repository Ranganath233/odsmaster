package com.wipro.wess.ods.uom;

import java.util.StringTokenizer;

import com.wipro.wess.ods.organisation.OrganisationPK;
import com.wipro.wess.ods.upload.ProvisioningConstants;
import com.wipro.wess.ods.utils.OmUtil;

// Generated Jan 7, 2014 12:15:31 PM by Hibernate Tools 3.2.2.GA

/**
 * OmUomSiteExceptId generated by hbm2java
 */
public class OmUomSiteExceptPK implements java.io.Serializable {

    /**
     * 
     */
    private static final long serialVersionUID = 7823456486676030450L;

    public OrganisationPK orgId;

    public String locId;

    public MeasurementEntityPK measureEntityId;

    public MeasurementPK measureId;

    public OmUomSiteExceptPK() {
    }

    public OmUomSiteExceptPK(OrganisationPK orgId, String locId, MeasurementEntityPK measureEntityId,
            MeasurementPK measureId) {
        this.orgId = orgId;
        this.locId = locId;
        this.measureEntityId = measureEntityId;
        this.measureId = measureId;
    }

    public OmUomSiteExceptPK(String key) {
        StringTokenizer token = new StringTokenizer(OmUtil.decode(key), ProvisioningConstants.DOMAIN_OBJ_SEPERATOR);
        this.orgId = new OrganisationPK(token.nextToken());
        this.locId = token.nextToken();
        this.measureEntityId = new MeasurementEntityPK(token.nextToken());
        this.measureId = new MeasurementPK(token.nextToken());
    }

    @Override
    public String toString() {
        return OmUtil.encode("" + this.orgId.toString() + ProvisioningConstants.DOMAIN_OBJ_SEPERATOR
                + this.locId + ProvisioningConstants.DOMAIN_OBJ_SEPERATOR
                + this.measureEntityId.toString() + ProvisioningConstants.DOMAIN_OBJ_SEPERATOR
                + this.measureId.toString());
    }

    public OrganisationPK getOrgId() {
        return this.orgId;
    }

    public void setOrgId(OrganisationPK orgId) {
        this.orgId = orgId;
    }

    public String getLocId() {
        return this.locId;
    }

    public void setLocId(String locId) {
        this.locId = locId;
    }

    public MeasurementEntityPK getMeasureEntityId() {
        return this.measureEntityId;
    }

    public void setMeasureEntityId(MeasurementEntityPK measureEntityId) {
        this.measureEntityId = measureEntityId;
    }

    public MeasurementPK getMeasureId() {
        return this.measureId;
    }

    public void setMeasureId(MeasurementPK measureId) {
        this.measureId = measureId;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((locId == null) ? 0 : locId.hashCode());
        result = prime * result + ((measureEntityId == null) ? 0 : measureEntityId.hashCode());
        result = prime * result + ((measureId == null) ? 0 : measureId.hashCode());
        result = prime * result + ((orgId == null) ? 0 : orgId.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        OmUomSiteExceptPK other = (OmUomSiteExceptPK) obj;
        if (locId == null) {
            if (other.locId != null)
                return false;
        } else if (!locId.equals(other.locId))
            return false;
        if (measureEntityId == null) {
            if (other.measureEntityId != null)
                return false;
        } else if (!measureEntityId.equals(other.measureEntityId))
            return false;
        if (measureId == null) {
            if (other.measureId != null)
                return false;
        } else if (!measureId.equals(other.measureId))
            return false;
        if (orgId == null) {
            if (other.orgId != null)
                return false;
        } else if (!orgId.equals(other.orgId))
            return false;
        return true;
    }

}
