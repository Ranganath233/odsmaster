package com.wipro.wess.ods.masterconfig;

import java.nio.charset.Charset;
import java.util.StringTokenizer;

import com.google.common.io.BaseEncoding;
import com.wipro.wess.ods.organisation.OrganisationPK;

// Generated Dec 19, 2013 5:56:26 PM by Hibernate Tools 3.2.2.GA

/**
 * OmGeoLocationId generated by hbm2java
 */
public class OmGeoLocationPK implements java.io.Serializable {

    /**
	 * 
	 */
    private static final long serialVersionUID = 5074438340139911068L;

    public String locationId;

    public OrganisationPK orgId;

    public OmGeoLocationPK() {
    }

    public OmGeoLocationPK(String locationId, OrganisationPK orgId) {
        this.locationId = locationId;
        this.orgId = orgId;
    }

    public OmGeoLocationPK(String key) {
        StringTokenizer token = new StringTokenizer(decode(key), "~");
        this.locationId = token.nextToken();
        this.orgId = new OrganisationPK(token.nextToken());
    }

    public String getLocationId() {
        return this.locationId;
    }

    public void setLocationId(String locationId) {
        this.locationId = locationId;
    }

    public OrganisationPK getOrgId() {
        return this.orgId;
    }

    public void setOrgId(OrganisationPK orgId) {
        this.orgId = orgId;
    }

    public String toString() {
        return encode("" + locationId + "~" + this.orgId);
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((locationId == null) ? 0 : locationId.hashCode());
        result = prime * result + ((orgId == null) ? 0 : orgId.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        OmGeoLocationPK other = (OmGeoLocationPK) obj;
        if (locationId == null) {
            if (other.locationId != null)
                return false;
        } else if (!locationId.equals(other.locationId))
            return false;
        if (orgId == null) {
            if (other.orgId != null)
                return false;
        } else if (!orgId.equals(other.orgId))
            return false;
        return true;
    }

    private static String encode(String str) {
        return BaseEncoding.base32().encode(str.getBytes(Charset.forName("UTF-8")));
    }

    private static String decode(String str) {
        return new String(BaseEncoding.base32().decode(str), Charset.forName("UTF-8"));
    }

}
