package com.wipro.wess.ods.uom;

import java.nio.charset.Charset;
import java.util.StringTokenizer;

import com.google.common.io.BaseEncoding;
import com.wipro.wess.ods.upload.ProvisioningConstants;

// Generated Jan 7, 2014 12:15:31 PM by Hibernate Tools 3.2.2.GA

/**
 * MUomDefaultsId generated by hbm2java
 */
public class UOMDefaultsPK implements java.io.Serializable {

    /**
     * 
     */
    private static final long serialVersionUID = -5166296411900014841L;

    public MeasurementEntityPK measureEntityId;

    public MeasurementPK measureId;

    public UOMDefaultsPK() {
    }

    public UOMDefaultsPK(MeasurementEntityPK measureEntityId, MeasurementPK measureId) {
        this.measureEntityId = measureEntityId;
        this.measureId = measureId;
    }

    public UOMDefaultsPK(String key) {
        StringTokenizer token = new StringTokenizer(decode(key), ProvisioningConstants.DOMAIN_OBJ_SEPERATOR);
        this.measureEntityId = new MeasurementEntityPK(token.nextToken());
        this.measureId = new MeasurementPK(token.nextToken());
    }

    @Override
    public String toString() {
        return encode("" + this.measureEntityId.toString() + ProvisioningConstants.DOMAIN_OBJ_SEPERATOR
                + this.measureId.toString() + ProvisioningConstants.DOMAIN_OBJ_SEPERATOR);
    }

    public MeasurementEntityPK getMeasureEntityId() {
        return measureEntityId;
    }

    public void setMeasureEntityId(MeasurementEntityPK measureEntityId) {
        this.measureEntityId = measureEntityId;
    }

    public MeasurementPK getMeasureId() {
        return measureId;
    }

    public void setMeasureId(MeasurementPK measureId) {
        this.measureId = measureId;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((measureEntityId == null) ? 0 : measureEntityId.hashCode());
        result = prime * result + ((measureId == null) ? 0 : measureId.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        UOMDefaultsPK other = (UOMDefaultsPK) obj;
        if (measureEntityId == null) {
            if (other.measureEntityId != null)
                return false;
        } else if (!measureEntityId.equals(other.measureEntityId))
            return false;
        if (measureId == null) {
            if (other.measureId != null)
                return false;
        } else if (!measureId.equals(other.measureId))
            return false;
        return true;
    }

    private static String encode(String str) {

        return BaseEncoding.base32().encode(str.getBytes(Charset.forName("UTF-8")));
    }

    private static String decode(String str) {
        return new String(BaseEncoding.base32().decode(str), Charset.forName("UTF-8"));
    }

}
