package com.wipro.wess.ods.site;

// Generated Jan 7, 2014 12:15:31 PM by Hibernate Tools 3.2.2.GA

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import javax.jdo.InstanceCallbacks;
import javax.jdo.annotations.Column;
import javax.jdo.annotations.Columns;
import javax.jdo.annotations.IdGeneratorStrategy;
import javax.jdo.annotations.IdentityType;
import javax.jdo.annotations.Persistent;

import org.apache.isis.applib.DomainObjectContainer;
import org.apache.isis.applib.annotation.Audited;
import org.apache.isis.applib.annotation.Bookmarkable;
import org.apache.isis.applib.annotation.Bulk;
import org.apache.isis.applib.annotation.CssClass;
import org.apache.isis.applib.annotation.Hidden;
import org.apache.isis.applib.annotation.Mandatory;
import org.apache.isis.applib.annotation.ObjectType;
import org.apache.isis.applib.annotation.Optional;
import org.apache.isis.applib.annotation.Title;
import org.apache.isis.applib.annotation.Where;

/**
 * OmSiteExtendedAttr generated by hbm2java
 */
@javax.jdo.annotations.PersistenceCapable(schema = "gemsods", table = "om_site_extended_attr", objectIdClass = OmSiteExtendedAttrPK.class, identityType = IdentityType.APPLICATION)
// @javax.jdo.annotations.Version(strategy = VersionStrategy.VERSION_NUMBER,
// column = "version")
@javax.jdo.annotations.Queries({ @javax.jdo.annotations.Query(name = "fetch_siteextdattr_by_user", language = "JPQL", value = "SELECT siteext FROM com.wipro.wess.ods.site.OmSiteExtendedAttr siteext "
        + " JOIN siteext.site site WHERE EXISTS "
        + " (SELECT 1 FROM com.wipro.wess.pdm.security.OmPermission permission WHERE permission.site = site AND permission IN "
        + " (SELECT "
        + " OmRolesPermissions.permission FROM com.wipro.wess.pdm.security.OmRolesPermissions OmRolesPermissions "
        + " WHERE role IN ( SELECT OmUsersRoles.role FROM com.wipro.wess.pdm.security.OmUsersRoles OmUsersRoles WHERE OmUsersRoles.user.userName = :userName) ) ) "), })
@Audited
@ObjectType("OmSiteExtendedAttr")
@Bookmarkable
public class OmSiteExtendedAttr implements java.io.Serializable, InstanceCallbacks {

    /**
     * 
     */
    private static final long serialVersionUID = 4558678738941060015L;

    private OmSite site;

    private String paramName;

    private int recordId;

    private String updatedBy;

    private Date updatedTimeTs;

    private BigDecimal numValue;

    private String alnValue;

    private OmSiteService siteService;

    private String configUser;

    public OmSiteExtendedAttr() {
    }

    public OmSiteExtendedAttr(int recordId, String updatedBy, Date updatedTimeTs) {
        this.recordId = recordId;
        this.updatedBy = updatedBy;
        this.updatedTimeTs = updatedTimeTs;
    }

    public OmSiteExtendedAttr(int recordId, String updatedBy, Date updatedTimeTs, BigDecimal numValue, String alnValue) {
        this.recordId = recordId;
        this.updatedBy = updatedBy;
        this.updatedTimeTs = updatedTimeTs;
        this.numValue = numValue;
        this.alnValue = alnValue;
    }

    @Column(allowsNull = "false", name = "record_id")
    @Persistent(valueStrategy = IdGeneratorStrategy.INCREMENT)
    @Hidden(where = Where.ANYWHERE)
    public int getRecordId() {
        return this.recordId;
    }

    public void setRecordId(int recordId) {
        this.recordId = recordId;
    }

    @Columns(value = { @Column(allowsNull = "false", name = "orgid"),
            @Column(allowsNull = "false", name = "location", target = "site_id") })
    @Persistent(primaryKey = "true")
    @Title
    @Mandatory
    public OmSite getSite() {
        return site;
    }

    public void setSite(OmSite site) {
        this.site = site;
    }

    @Column(allowsNull = "false", name = "param_name")
    @Persistent(primaryKey = "true")
    @Title
    public String getParamName() {
        return paramName;
    }

    public void setParamName(String paramName) {
        this.paramName = paramName;
    }

    @Column(allowsNull = "false", name = "updated_by")
    @Hidden(where = Where.OBJECT_FORMS)
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Column(allowsNull = "false", name = "updated_time_ts")
    @Hidden(where = Where.OBJECT_FORMS)
    public Date getUpdatedTimeTs() {
        return this.updatedTimeTs;
    }

    public void setUpdatedTimeTs(Date updatedTimeTs) {
        this.updatedTimeTs = updatedTimeTs;
    }

    @Column(name = "num_value")
    @Optional
    public BigDecimal getNumValue() {
        return this.numValue;
    }

    public void setNumValue(BigDecimal numValue) {
        this.numValue = numValue;
    }

    @Column(name = "aln_value")
    @Optional
    public String getAlnValue() {
        return this.alnValue;
    }

    public void setAlnValue(String alnValue) {
        this.alnValue = alnValue;
    }

    @Column(name = "config_user")
    @Hidden(where = Where.EVERYWHERE)
    public String getConfigUser() {
        return configUser;
    }

    public void setConfigUser(String configUser) {
        this.configUser = configUser;
    }

    public void injectOmSiteService(OmSiteService siteService) {
        this.siteService = siteService;
    }

    public List<OmSite> choicesSite() {
        return this.siteService.listAllSites();
    }

    private DomainObjectContainer container;

    public void injectDomainObjectContainer(final DomainObjectContainer container) {
        this.container = container;
    }

    public void jdoPostLoad() {
    }

    public void jdoPreClear() {
    }

    public void jdoPreStore() {
        this.setUpdatedBy(this.container.getUser().getName());
        this.setUpdatedTimeTs(new Date());
        this.setConfigUser(this.container.getUser().getName());
    }

    public void jdoPreDelete() {
    }

    @Bulk
    @CssClass("x-caution")
    public List<OmSiteExtendedAttr> delete() {
        this.container.removeIfNotAlready(this);
        this.container.informUser("Deleted " + container.titleOf(this));
        return this.siteService.listAllSiteExtdAttr();

    }
}
