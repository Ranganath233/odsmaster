package com.wipro.wess.ods.munit;

// Generated Jan 7, 2014 12:15:31 PM by Hibernate Tools 3.2.2.GA

import java.util.Date;
import java.util.List;

import javax.jdo.InstanceCallbacks;
import javax.jdo.annotations.Column;
import javax.jdo.annotations.IdGeneratorStrategy;
import javax.jdo.annotations.IdentityType;
import javax.jdo.annotations.Persistent;

import org.apache.isis.applib.DomainObjectContainer;
import org.apache.isis.applib.annotation.Audited;
import org.apache.isis.applib.annotation.Bookmarkable;
import org.apache.isis.applib.annotation.Bulk;
import org.apache.isis.applib.annotation.CssClass;
import org.apache.isis.applib.annotation.Hidden;
import org.apache.isis.applib.annotation.ObjectType;
import org.apache.isis.applib.annotation.Optional;
import org.apache.isis.applib.annotation.Title;
import org.apache.isis.applib.annotation.Where;

import com.wipro.wess.ods.uom.UOMMeasurementService;

/**
 * MUnit generated by hbm2java
 */
@javax.jdo.annotations.PersistenceCapable(schema = "gemsods", table = "m_unit", objectIdClass = MUnitPK.class, identityType = IdentityType.APPLICATION)
// @javax.jdo.annotations.Version(strategy = VersionStrategy.VERSION_NUMBER,
// column = "version")
@Audited
@ObjectType("MUnit")
@Bookmarkable
public class MUnit implements java.io.Serializable, InstanceCallbacks {

    /**
     * 
     */
    private static final long serialVersionUID = -7948042654436687058L;

    private String unitId;

    private MUnitFamily MUnitFamily;

    private String unitSymbol;

    private Long sourceId;

    private Date changeDate;

    private int recordId;

    private String configUser;

    /*
     * private Set<OmUomExtDataSourceExcept> omUomExtDataSourceExcepts = new HashSet<OmUomExtDataSourceExcept>(0);
     * private Set<OmUomCountryExcept> omUomCountryExcepts = new HashSet<OmUomCountryExcept>(0); private Set<MPointlist>
     * MPointlists = new HashSet<MPointlist>(0); private Set<MUomDefaults> MUomDefaultses = new
     * HashSet<MUomDefaults>(0); private Set<OmPointlistCountryExcept> omPointlistCountryExcepts = new
     * HashSet<OmPointlistCountryExcept>(0); private Set<OmUomSiteExcept> omUomSiteExcepts = new
     * HashSet<OmUomSiteExcept>(0); private Set<OmSiteInfoElementAudit> omSiteInfoElementAudits = new
     * HashSet<OmSiteInfoElementAudit>(0); private Set<OmPointlistCountryPolicy> omPointlistCountryPolicies = new
     * HashSet<OmPointlistCountryPolicy>(0); private Set<OmAssetInfoElement> omAssetInfoElements = new
     * HashSet<OmAssetInfoElement>(0); private Set<OmSiteInfoElement> omSiteInfoElements = new
     * HashSet<OmSiteInfoElement>(0); private Set<OmUomOrgPolicy> omUomOrgPolicies = new HashSet<OmUomOrgPolicy>(0);
     * private Set<OmPointlistOrgPolicy> omPointlistOrgPolicies = new HashSet<OmPointlistOrgPolicy>(0); private
     * Set<TtMsaProfileSummarizedDay> ttMsaProfileSummarizedDaiesForConsOrgUnitId = new
     * HashSet<TtMsaProfileSummarizedDay>( 0); private Set<MUnitConversion> MUnitConversionsForFromUnitId = new
     * HashSet<MUnitConversion>(0); private Set<MUnitConversion> MUnitConversionsForToUnitId = new
     * HashSet<MUnitConversion>(0); private Set<OmPointlistSiteExcept> omPointlistSiteExcepts = new
     * HashSet<OmPointlistSiteExcept>(0); private Set<OmOrgUnitMap> omOrgUnitMaps = new HashSet<OmOrgUnitMap>(0);
     * private Set<TtMsaProfileSummarizedDay> ttMsaProfileSummarizedDaiesForConsUnitId = new
     * HashSet<TtMsaProfileSummarizedDay>( 0); private Set<OmAssetInfoElementAudit> omAssetInfoElementAudits = new
     * HashSet<OmAssetInfoElementAudit>(0); private Set<OmUomCountryPolicy> omUomCountryPolicies = new
     * HashSet<OmUomCountryPolicy>(0);
     */
    public MUnit() {
    }

    public MUnit(String unitId, MUnitFamily MUnitFamily, String unitSymbol, Date changeDate, int recordId) {
        this.unitId = unitId;
        this.MUnitFamily = MUnitFamily;
        this.unitSymbol = unitSymbol;
        this.changeDate = changeDate;
        this.recordId = recordId;
    }

    public MUnit(String unitId, MUnitFamily MUnitFamily, String unitSymbol, Long sourceId, Date changeDate, int recordId) {
        this.unitId = unitId;
        this.MUnitFamily = MUnitFamily;
        this.unitSymbol = unitSymbol;
        this.sourceId = sourceId;
        this.changeDate = changeDate;
        this.recordId = recordId;
    }

    @Column(allowsNull = "false", name = "unit_id")
    @Persistent(primaryKey = "true")
    @Title
    public String getUnitId() {
        return this.unitId;
    }

    public void setUnitId(String unitId) {
        this.unitId = unitId;
    }

    @Column(allowsNull = "false", name = "unit_family_id")
    public MUnitFamily getMUnitFamily() {
        return this.MUnitFamily;
    }

    public void setMUnitFamily(MUnitFamily MUnitFamily) {
        this.MUnitFamily = MUnitFamily;
    }

    @Column(allowsNull = "false", name = "unit_symbol")
    public String getUnitSymbol() {
        return this.unitSymbol;
    }

    public void setUnitSymbol(String unitSymbol) {
        this.unitSymbol = unitSymbol;
    }

    @Column(name = "source_id")
    @Optional
    @Hidden(where = Where.ALL_TABLES)
    public Long getSourceId() {
        return this.sourceId;
    }

    public void setSourceId(Long sourceId) {
        this.sourceId = sourceId;
    }

    @Column(allowsNull = "false", name = "change_date")
    @Hidden(where = Where.OBJECT_FORMS)
    public Date getChangeDate() {
        return this.changeDate;
    }

    public void setChangeDate(Date changeDate) {
        this.changeDate = changeDate;
    }

    @Column(allowsNull = "false", name = "record_id")
    @Persistent(valueStrategy = IdGeneratorStrategy.INCREMENT)
    @Hidden(where = Where.ANYWHERE)
    public int getRecordId() {
        return this.recordId;
    }

    public void setRecordId(int recordId) {
        this.recordId = recordId;
    }

    @Column(name = "config_user")
    @Hidden(where = Where.EVERYWHERE)
    public String getConfigUser() {
        return configUser;
    }

    public void setConfigUser(String configUser) {
        this.configUser = configUser;
    }

    /*
     * public Set<OmUomExtDataSourceExcept> getOmUomExtDataSourceExcepts() { return this.omUomExtDataSourceExcepts; }
     * public void setOmUomExtDataSourceExcepts(Set<OmUomExtDataSourceExcept> omUomExtDataSourceExcepts) {
     * this.omUomExtDataSourceExcepts = omUomExtDataSourceExcepts; } public Set<OmUomCountryExcept>
     * getOmUomCountryExcepts() { return this.omUomCountryExcepts; } public void
     * setOmUomCountryExcepts(Set<OmUomCountryExcept> omUomCountryExcepts) { this.omUomCountryExcepts =
     * omUomCountryExcepts; } public Set<MPointlist> getMPointlists() { return this.MPointlists; } public void
     * setMPointlists(Set<MPointlist> MPointlists) { this.MPointlists = MPointlists; } public Set<MUomDefaults>
     * getMUomDefaultses() { return this.MUomDefaultses; } public void setMUomDefaultses(Set<MUomDefaults>
     * MUomDefaultses) { this.MUomDefaultses = MUomDefaultses; } public Set<OmPointlistCountryExcept>
     * getOmPointlistCountryExcepts() { return this.omPointlistCountryExcepts; } public void
     * setOmPointlistCountryExcepts(Set<OmPointlistCountryExcept> omPointlistCountryExcepts) {
     * this.omPointlistCountryExcepts = omPointlistCountryExcepts; } public Set<OmUomSiteExcept> getOmUomSiteExcepts() {
     * return this.omUomSiteExcepts; } public void setOmUomSiteExcepts(Set<OmUomSiteExcept> omUomSiteExcepts) {
     * this.omUomSiteExcepts = omUomSiteExcepts; } public Set<OmSiteInfoElementAudit> getOmSiteInfoElementAudits() {
     * return this.omSiteInfoElementAudits; } public void setOmSiteInfoElementAudits(Set<OmSiteInfoElementAudit>
     * omSiteInfoElementAudits) { this.omSiteInfoElementAudits = omSiteInfoElementAudits; } public
     * Set<OmPointlistCountryPolicy> getOmPointlistCountryPolicies() { return this.omPointlistCountryPolicies; } public
     * void setOmPointlistCountryPolicies(Set<OmPointlistCountryPolicy> omPointlistCountryPolicies) {
     * this.omPointlistCountryPolicies = omPointlistCountryPolicies; } public Set<OmAssetInfoElement>
     * getOmAssetInfoElements() { return this.omAssetInfoElements; } public void
     * setOmAssetInfoElements(Set<OmAssetInfoElement> omAssetInfoElements) { this.omAssetInfoElements =
     * omAssetInfoElements; } public Set<OmSiteInfoElement> getOmSiteInfoElements() { return this.omSiteInfoElements; }
     * public void setOmSiteInfoElements(Set<OmSiteInfoElement> omSiteInfoElements) { this.omSiteInfoElements =
     * omSiteInfoElements; } public Set<OmUomOrgPolicy> getOmUomOrgPolicies() { return this.omUomOrgPolicies; } public
     * void setOmUomOrgPolicies(Set<OmUomOrgPolicy> omUomOrgPolicies) { this.omUomOrgPolicies = omUomOrgPolicies; }
     * public Set<OmPointlistOrgPolicy> getOmPointlistOrgPolicies() { return this.omPointlistOrgPolicies; } public void
     * setOmPointlistOrgPolicies(Set<OmPointlistOrgPolicy> omPointlistOrgPolicies) { this.omPointlistOrgPolicies =
     * omPointlistOrgPolicies; } public Set<TtMsaProfileSummarizedDay> getTtMsaProfileSummarizedDaiesForConsOrgUnitId()
     * { return this.ttMsaProfileSummarizedDaiesForConsOrgUnitId; } public void
     * setTtMsaProfileSummarizedDaiesForConsOrgUnitId( Set<TtMsaProfileSummarizedDay>
     * ttMsaProfileSummarizedDaiesForConsOrgUnitId) { this.ttMsaProfileSummarizedDaiesForConsOrgUnitId =
     * ttMsaProfileSummarizedDaiesForConsOrgUnitId; } public Set<MUnitConversion> getMUnitConversionsForFromUnitId() {
     * return this.MUnitConversionsForFromUnitId; } public void setMUnitConversionsForFromUnitId(Set<MUnitConversion>
     * MUnitConversionsForFromUnitId) { this.MUnitConversionsForFromUnitId = MUnitConversionsForFromUnitId; } public
     * Set<MUnitConversion> getMUnitConversionsForToUnitId() { return this.MUnitConversionsForToUnitId; } public void
     * setMUnitConversionsForToUnitId(Set<MUnitConversion> MUnitConversionsForToUnitId) {
     * this.MUnitConversionsForToUnitId = MUnitConversionsForToUnitId; } public Set<OmPointlistSiteExcept>
     * getOmPointlistSiteExcepts() { return this.omPointlistSiteExcepts; } public void
     * setOmPointlistSiteExcepts(Set<OmPointlistSiteExcept> omPointlistSiteExcepts) { this.omPointlistSiteExcepts =
     * omPointlistSiteExcepts; } public Set<OmOrgUnitMap> getOmOrgUnitMaps() { return this.omOrgUnitMaps; } public void
     * setOmOrgUnitMaps(Set<OmOrgUnitMap> omOrgUnitMaps) { this.omOrgUnitMaps = omOrgUnitMaps; } public
     * Set<TtMsaProfileSummarizedDay> getTtMsaProfileSummarizedDaiesForConsUnitId() { return
     * this.ttMsaProfileSummarizedDaiesForConsUnitId; } public void setTtMsaProfileSummarizedDaiesForConsUnitId(
     * Set<TtMsaProfileSummarizedDay> ttMsaProfileSummarizedDaiesForConsUnitId) {
     * this.ttMsaProfileSummarizedDaiesForConsUnitId = ttMsaProfileSummarizedDaiesForConsUnitId; } public
     * Set<OmAssetInfoElementAudit> getOmAssetInfoElementAudits() { return this.omAssetInfoElementAudits; } public void
     * setOmAssetInfoElementAudits(Set<OmAssetInfoElementAudit> omAssetInfoElementAudits) {
     * this.omAssetInfoElementAudits = omAssetInfoElementAudits; } public Set<OmUomCountryPolicy>
     * getOmUomCountryPolicies() { return this.omUomCountryPolicies; } public void
     * setOmUomCountryPolicies(Set<OmUomCountryPolicy> omUomCountryPolicies) { this.omUomCountryPolicies =
     * omUomCountryPolicies; }
     */

    private DomainObjectContainer container;

    public void injectDomainObjectContainer(final DomainObjectContainer container) {
        this.container = container;
    }

    public List<MUnitFamily> choicesMUnitFamily() {
        return this.container.allInstances(MUnitFamily.class);
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((unitId == null) ? 0 : unitId.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        MUnit other = (MUnit) obj;
        if (unitId == null) {
            if (other.unitId != null)
                return false;
        } else if (!unitId.equals(other.unitId))
            return false;
        return true;
    }

    public void jdoPostLoad() {
    }

    public void jdoPreClear() {
    }

    public void jdoPreStore() {
        this.setChangeDate(new Date());
        this.setConfigUser(this.container.getUser().getName());
    }

    public void jdoPreDelete() {
    }

    private UOMMeasurementService measurementService;

    public void injectUOMMeasurementService(UOMMeasurementService measurementService) {
        this.measurementService = measurementService;
    }

    @Bulk
    @CssClass("x-caution")
    public List<MUnit> delete() {
        this.container.removeIfNotAlready(this);
        this.container.informUser("Deleted " + container.titleOf(this));
        return this.measurementService.listAllMeasurementUnits();

    }
}
