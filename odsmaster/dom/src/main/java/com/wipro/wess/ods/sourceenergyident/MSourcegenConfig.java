package com.wipro.wess.ods.sourceenergyident;

// Generated Jan 7, 2014 12:15:31 PM by Hibernate Tools 3.2.2.GA

import java.util.Date;

import javax.jdo.InstanceCallbacks;
import javax.jdo.annotations.Column;
import javax.jdo.annotations.IdGeneratorStrategy;
import javax.jdo.annotations.IdentityType;
import javax.jdo.annotations.Persistent;
import javax.jdo.annotations.Sequence;
import javax.jdo.annotations.SequenceStrategy;

import org.apache.isis.applib.DomainObjectContainer;
import org.apache.isis.applib.annotation.Audited;
import org.apache.isis.applib.annotation.Bookmarkable;
import org.apache.isis.applib.annotation.Hidden;
import org.apache.isis.applib.annotation.ObjectType;
import org.apache.isis.applib.annotation.Where;

/**
 * MSourcegenConfig generated by hbm2java
 */
@javax.jdo.annotations.PersistenceCapable(schema = "gemsods", table = "m_sourcegen_config", identityType = IdentityType.APPLICATION)
// @javax.jdo.annotations.Version(strategy = VersionStrategy.VERSION_NUMBER,
// column = "version")
@javax.jdo.annotations.Queries({ @javax.jdo.annotations.Query(name = "fetch_MSourcegenConfig_by_pk", language = "JDOQL", value = "SELECT "
        + " MSourcegenConfig FROM com.wipro.wess.ods.sourceenergyident.MSourcegenConfig MSourcegenConfig "
        + " WHERE generationTechnology == :generationTypeCode") })
@Audited
@ObjectType("MSourcegenConfig")
@Bookmarkable
@Sequence(name = "sourcegen_id", datastoreSequence = "sourcegen_id", strategy = SequenceStrategy.CONTIGUOUS)
public class MSourcegenConfig implements java.io.Serializable, InstanceCallbacks {

    /**
     * 
     */
    private static final long serialVersionUID = -5593165155796937839L;

    private Long generationId;

    private String generationTechnology;

    private String description;

    private String insertedBy;

    private Date insertedTimeTs;

    private Long sourceId;
    
    private String configUser;

    // private Set<OmSourceidentity> omSourceidentities = new HashSet<OmSourceidentity>(0);

    public MSourcegenConfig() {
    }

    public MSourcegenConfig(Long generationId, String generationTechnology, String insertedBy, Date insertedTimeTs) {
        this.generationId = generationId;
        this.generationTechnology = generationTechnology;
        this.insertedBy = insertedBy;
        this.insertedTimeTs = insertedTimeTs;
    }

    public MSourcegenConfig(Long generationId, String generationTechnology, String description, String insertedBy,
            Date insertedTimeTs, Long sourceId/* , Set<OmSourceidentity> omSourceidentities */) {
        this.generationId = generationId;
        this.generationTechnology = generationTechnology;
        this.description = description;
        this.insertedBy = insertedBy;
        this.insertedTimeTs = insertedTimeTs;
        this.sourceId = sourceId;
        // this.omSourceidentities = omSourceidentities;
    }

    @Column(allowsNull = "false", name = "generation_id")
    @Persistent(primaryKey = "true", valueStrategy = IdGeneratorStrategy.SEQUENCE, sequence = "sourcegen_id")
    public Long getGenerationId() {
        return this.generationId;
    }

    public void setGenerationId(Long generationId) {
        this.generationId = generationId;
    }

    @Column(allowsNull = "false", name = "generation_technology")
    public String getGenerationTechnology() {
        return this.generationTechnology;
    }

    public void setGenerationTechnology(String generationTechnology) {
        this.generationTechnology = generationTechnology;
    }

    @Column(name = "description")
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(allowsNull = "false", name = "inserted_by")
    public String getInsertedBy() {
        return this.insertedBy;
    }

    public void setInsertedBy(String insertedBy) {
        this.insertedBy = insertedBy;
    }

    @Column(allowsNull = "false", name = "inserted_time_ts")
    public Date getInsertedTimeTs() {
        return this.insertedTimeTs;
    }

    public void setInsertedTimeTs(Date insertedTimeTs) {
        this.insertedTimeTs = insertedTimeTs;
    }

    @Column(name = "source_id_")
    public Long getSourceId() {
        return this.sourceId;
    }

    public void setSourceId(Long sourceId) {
        this.sourceId = sourceId;
    }


    @Column(name = "config_user")
    @Hidden(where = Where.EVERYWHERE)
    public String getConfigUser() {
        return configUser;
    }

    public void setConfigUser(String configUser) {
        this.configUser = configUser;
    }
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((generationId == null) ? 0 : generationId.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        MSourcegenConfig other = (MSourcegenConfig) obj;
        if (generationId == null) {
            if (other.generationId != null)
                return false;
        } else if (!generationId.equals(other.generationId))
            return false;
        return true;
    }

    /*
     * public Set<OmSourceidentity> getOmSourceidentities() { return this.omSourceidentities; } public void
     * setOmSourceidentities(Set<OmSourceidentity> omSourceidentities) { this.omSourceidentities = omSourceidentities; }
     */
    
    private DomainObjectContainer container;

    public void injectDomainObjectContainer(final DomainObjectContainer container) {
        this.container = container;
    }
    public void jdoPostLoad() {
    }

    public void jdoPreClear() {
    }

    public void jdoPreStore() {
        this.setConfigUser(this.container.getUser().getName());
    }

    public void jdoPreDelete() {
    }

}
