#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

[main]

contextFactory = org.apache.isis.security.shiro.IsisLdapContextFactory
contextFactory.url = ldap://localhost:10389
contextFactory.authenticationMechanism = CRAM-MD5
contextFactory.systemAuthenticationMechanism = simple
contextFactory.systemUsername = uid=admin,ou=system
contextFactory.systemPassword = secret

ldapRealm = org.apache.isis.security.shiro.IsisLdapRealm
ldapRealm.contextFactory = $contextFactory

ldapRealm.searchBase = ou=groups,o=mojo
ldapRealm.groupObjectClass = groupOfUniqueNames
ldapRealm.uniqueMemberAttribute = uniqueMember
ldapRealm.uniqueMemberAttributeValueTemplate = uid={0}

# optional mapping from physical groups to logical application roles
#ldapRealm.rolesByGroup = \
#    LDN_USERS: user_role,\
#    NYK_USERS: user_role,\
#    HKG_USERS: user_role,\
#    GLOBAL_ADMIN: admin_role,\
#    DEMOS: self-install_role

ldapRealm.permissionsByRole=\
   user_role = *:ToDoItemsJdo:*:*,\
               *:ToDoItem:*:*; \
   self-install_role = *:ToDoItemsFixturesService:install:* ; \
   admin_role = *

# to use ldap...
# (see docs for details of how to setup users/groups in Apache Directory Studio).
#securityManager.realms = $ldapRealm

# to use .ini file
#securityManager.realms = $iniRealm

#builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
#securityManager.cacheManager = $builtInCacheManager
ps = org.apache.shiro.authc.credential.DefaultPasswordService
pm = org.apache.shiro.authc.credential.PasswordMatcher
pm.passwordService = $ps
aa = org.apache.shiro.authc.credential.AllowAllCredentialsMatcher
sm = org.apache.shiro.authc.credential.SimpleCredentialsMatcher

jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
securityManager.realms = $jdbcRealm
ds = org.postgresql.ds.PGPoolingDataSource
ds.serverName = localhost
ds.portNumber = 5433
ds.databaseName = ods_master_bby
ds.user = odsadm
ds.password = odsadm
jdbcRealm.dataSource = $ds
jdbcRealm.userRolesQuery = select r.role_name from gemsods.user_roles ur inner join gemsods.roles r on ur.role_id = r.role_id where user_id = (select user_id from gemsods.users where username = ?);
jdbcRealm.permissionsQuery=select p.permission from gemsods.roles_permissions rp inner join gemsods.permissions p on rp.permission_id = p.permission_id where rp.role_id = (select role_id from gemsods.roles where role_name = ?);
jdbcRealm.permissionsLookupEnabled=true

# -----------------------------------------------------------------------------
# Users and their assigned roles
#
# Each line conforms to the format defined in the
# org.apache.shiro.realm.text.TextConfigurationRealm#setUserDefinitions JavaDoc
# -----------------------------------------------------------------------------

[users]
# user = password, role1, role2, role3, ...


#sven = pass, admin_role, site_role
#dick = pass, user_role, self-install_role
#bob  = pass, user_role, self-install_role
#joe  = pass, user_role, self-install_role
#guest = guest, user_role
#bby= bby, admin_role

# -----------------------------------------------------------------------------
# Roles with assigned permissions
# 
# Each line conforms to the format defined in the
# org.apache.shiro.realm.text.TextConfigurationRealm#setRoleDefinitions JavaDoc
# -----------------------------------------------------------------------------

[roles]
# role = perm1, perm2, perm3, ...
# perm in format: packageName:className:memberName:r,w

#user_role =   *:ToDoItemsJdo:*:*,\
#             *:ToDoItem:*:*
#self-install_role = *:ToDoItemsFixturesService:install:*
#admin_role = com.wipro.wess:*:*:*,\
             #com.wipro.wess.welcome:*:*:*
#site_role = BBY:0540

